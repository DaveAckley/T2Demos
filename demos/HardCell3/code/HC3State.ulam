/** Summarization of the state of an HC3 .
 */
transient HC3State {
  typedef EventWindow.SiteNum SN;
  EventWindow ew;
  Random random;

  Unsigned myUpHops;
  Unsigned maxHop;
  Unsigned minUpHops;
  HC3NgbState mHC3NgbStates[4];

  Bool uninits = false;

  constant C2D mNgbOffs[4] = {
    { .x = -3, .y = 0 },
    { .x =  0, .y = -3 },
    { .x =  0, .y = 3 },
    { .x =  3, .y = 0 },
  };

  Void summarizeRels(QHardCell.NgbRels & rels) {
    for (Unsigned i = 0u; i < 4u; ++i) {
      rels[i] = mHC3NgbStates[i].summarizeRel();
    }
  }

  Void init(QHardCell & q) {
    myUpHops = q.getUpHops();
    maxHop = q.getMaxHopsGoal();
  }

  Void examineNgbs(QHardCell & qhc) {
    uninits = false;
    minUpHops = Unsigned.maxof;
    for (Unsigned i = 0u; i < mHC3NgbStates.lengthof; ++i) {
      HC3NgbState & n = mHC3NgbStates[i];
      C2D nbgoff = mNgbOffs[i];
      n.init(nbgoff, qhc);

      qhc.mNgbRels[i] = QHardCell.cNGBREL_OFFN; // Assume the worst
      if (n.hasValidNeighbor()) {
        
        if (n.foundUninitialized()) uninits = true;
        else if (n.getUpHops() < minUpHops) minUpHops = n.getUpHops();
      }
    }
    summarizeRels(qhc.mNgbRels);
  }

  Void updateNgbsForMove(SN movedir) {
    if (movedir < 1u || movedir > 4u) { Fail f; f.fail(); }
    C2D mc = ew.getCoord(movedir);
    for (Unsigned i = 0u; i < mHC3NgbStates.lengthof; ++i) {
      HC3NgbState & n = mHC3NgbStates[i];
      HC3NgbState.State ns = n.mState;
      if (ns > HC3NgbState.cNGB_EAST) continue; // XXX MIGHT BE WRONG?
      C2D themc = n.getNgbCoord();    // Find where they should be
      Atom & a = ew[themc];
      if (a as QHardCell) {    
        C2D nc = ew.getCoord(ns); // offset relative to our start position
        C2D newc = nc - mc;       // offset relative to our new position
        SN newsn = ew.getSiteNumber(newc);
        if (newsn > 4u) { Fail f; f.fail(); } // No good? Then how were we moving?
        n.mState = (HC3NgbState.State) newsn;             // updated state
        a.mNgbRels[3u-i] = n.summarizeRel();              // Summarize to neighbor now
      } else {
        ByteStreamLogger bsl;
        bsl.printf("UNFM NGB LOST? md %d i %d tc (%d,%d)\n",
                   movedir, i, themc.x, themc.y);
      }
    }
  }

}

